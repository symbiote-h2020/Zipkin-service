buildscript {
    ext {
        springBootVersion = '1.5.12.RELEASE'
        springCloudVersion = 'Dalston.SR5'
    }
    repositories {
        mavenCentral()
    }
    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
        classpath group: 'com.cinnober.gradle', name: 'semver-git', version: '2.2.1'
    }
}

apply plugin: 'java'
apply plugin: 'org.springframework.boot'
apply plugin: 'com.cinnober.gradle.semver-git'
apply plugin: 'maven-publish'

project.group = 'eu.h2020.symbiote'

jar {
    baseName = 'ZipkinService'
    version = project.version
}

repositories {
    mavenCentral()
}


dependencies {
    compile('org.springframework.cloud:spring-cloud-starter-config')
    compile('org.springframework.retry:spring-retry')
    compile('org.springframework.boot:spring-boot-starter-aop')
    compile('org.springframework.cloud:spring-cloud-starter-eureka')
    compile('io.zipkin.java:zipkin-server')
    compile('io.zipkin.java:zipkin-autoconfigure-ui')
    testCompile('org.springframework.boot:spring-boot-starter-test')
}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

bootRepackage {
    classifier = 'run'
}

task generateJavaDocs(type: Javadoc) {
    source = sourceSets.main.allJava
    destinationDir = reporting.file("javadocs")
}

task javadocJar(type: Jar, dependsOn: generateJavaDocs) {
    classifier = 'javadoc'
    from javadoc.destinationDir
}

task sourceJar(type: Jar) {
    from sourceSets.main.allJava
}

publishing {
    publications {
        mavenJava(MavenPublication) {
            groupId = project.group
            version = project.version
            from components.java

            artifact sourceJar {
                classifier "sources"
            }

            artifact javadocJar

            artifact(file("$libsDir/$project.name-$project.version-${bootRepackage.classifier}.jar")) {
                classifier "run"
            }
        }
    }
}

publishToMavenLocal.dependsOn(bootRepackage)

